# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build & Test

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-v1-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-v1-sonar-${{ hashFiles('build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-main-v1-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('gradle.properties') }}-${{ hashFiles('gradle/libs.versions.toml') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-main-v1

      - name: printenv
        run: printenv

      - name: Java version
        run: java -version

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build/Test with Gradle
        run: ./gradlew --stacktrace --console=verbose  build

      - name: Sonar check
        run: ./gradlew --stacktrace --console=verbose sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./buildUtils/code-coverage-report/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml # optional
          verbose: true

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish artifact Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: '**/build/reports/**'